锁：

1、悲观锁
    悲观锁，又称为 悲观并发控制锁（PCC），是数据库中一种非常典型且非常严格的并发控制策略。悲观锁具有强烈的独占会排他性，能够有效的避免不同事务对同一
    数据并发更新而造成的数据一致性问题。
    实现原理：
        如果一个事务（假定事务A）正在对数据进行处理，那么在整个处理过程中，都会将数据处于锁定状态，在这期间，其他事务将无法对这个数据进行更新操作，
        直到事务A完成对该数据的处理，释放了对应的锁之后，其他事务才能够重新竞争来对数据进行操作。

2、乐观锁

    乐观锁 又被称为乐观并发控制（OCC），是一种常见的并发控制策略。
    乐观锁实现原理：
        假定多个事务在处理过程中不会彼此受影响，因此在事务处理的绝大部分时间里不需要进行加锁处理。但是，既然有并发，就一定会存在数据更新冲突的可能。在乐观锁机制中，
        在更新请求提交之前，每个事务都会首先检查当前事务读取数据后，是否有其他事务对数据进行了修改。如果其他事务有更新的话，那么正在提交的事务就需要回滚。
        乐观锁通常适合使用在数据并发竞争不大，事务冲突较少的应用场景中。

        乐观锁控制的事务分成三个阶段：
        1、数据读取
        2、写入校验
            在写入校验阶段，事务会检查数据在读取阶段后 是否有其他事务对数据进行过更新，以确保数据更新的一致性。
            eg: 对于值V ,每次更新前都会比对其值是否是预期值A，只要符合预期，才会将V原子化的更新到性新值B，其中是否符合预期便是乐观锁中
            的"写入校验"阶段
        3、数据写入。



        在etcd 和 zookeeper中 都是使用版本号来实现 乐观锁机制。（在数据更新请求时 先校验版本号）



